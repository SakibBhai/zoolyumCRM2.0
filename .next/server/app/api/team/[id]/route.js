(()=>{var e={};e.id=9485,e.ids=[9485],e.modules={96330:e=>{"use strict";e.exports=require("@prisma/client")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},12412:e=>{"use strict";e.exports=require("assert")},79428:e=>{"use strict";e.exports=require("buffer")},55511:e=>{"use strict";e.exports=require("crypto")},94735:e=>{"use strict";e.exports=require("events")},81630:e=>{"use strict";e.exports=require("http")},55591:e=>{"use strict";e.exports=require("https")},11723:e=>{"use strict";e.exports=require("querystring")},79551:e=>{"use strict";e.exports=require("url")},28354:e=>{"use strict";e.exports=require("util")},74075:e=>{"use strict";e.exports=require("zlib")},55207:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>E,routeModule:()=>j,serverHooks:()=>A,workAsyncStorage:()=>f,workUnitAsyncStorage:()=>y});var s={};r.r(s),r.d(s,{DELETE:()=>N,GET:()=>v,PUT:()=>x});var a=r(44932),i=r(41913),n=r(96656),o=r(77949),u=r(86745),d=r(26718),l=r(96330),c=r(84133),m=r(8201),p=r(50826),w=r.n(p);let g=new l.PrismaClient,h=c.Ik({name:c.Yj().min(1,"Name is required").optional(),email:c.Yj().email("Invalid email format").optional(),password:c.Yj().min(6,"Password must be at least 6 characters").optional(),role:c.k5(["ADMIN","MANAGER","MEMBER"]).optional(),department:c.Yj().optional(),position:c.Yj().optional(),phone:c.Yj().optional(),avatar:c.Yj().optional(),isActive:c.zM().optional()});async function v(e,{params:t}){try{let e=await (0,u.getServerSession)(d.Nh);if(!e?.user?.id)return o.NextResponse.json({error:"Unauthorized"},{status:401});let{id:r}=await t;if(!r)return o.NextResponse.json({error:"Team member ID is required"},{status:400});let s=await g.user.findUnique({where:{id:r},select:{id:!0,name:!0,email:!0,role:!0,department:!0,phone:!0,avatarUrl:!0,isActive:!0,createdAt:!0,updatedAt:!0,_count:{select:{assignedLeads:!0,managedClients:!0,managedProjects:!0,assignedTasks:!0,timeEntries:!0}},assignedLeads:{select:{id:!0,name:!0,email:!0,company:!0,score:!0,source:!0,createdAt:!0},orderBy:{createdAt:"desc"},take:10},managedClients:{select:{id:!0,name:!0,email:!0,company:!0,createdAt:!0},orderBy:{createdAt:"desc"},take:10},managedProjects:{select:{id:!0,name:!0,description:!0,status:!0,priority:!0,startDate:!0,endDate:!0,budget:!0,client:{select:{id:!0,name:!0,company:!0}},_count:{select:{tasks:!0}}},orderBy:{createdAt:"desc"},take:10},assignedTasks:{select:{id:!0,title:!0,description:!0,status:!0,priority:!0,dueDate:!0,estimatedHours:!0,project:{select:{id:!0,name:!0,client:{select:{id:!0,name:!0,company:!0}}}},_count:{select:{timeEntries:!0}}},orderBy:{createdAt:"desc"},take:15},timeEntries:{select:{id:!0,description:!0,hours:!0,date:!0,task:{select:{id:!0,title:!0,project:{select:{id:!0,name:!0}}}}},orderBy:{date:"desc"},take:20}}});if(!s)return o.NextResponse.json({error:"Team member not found"},{status:404});let a=await g.timeEntry.aggregate({where:{userId:r},_sum:{hours:!0}}),i=await g.timeEntry.aggregate({where:{userId:r,date:{gte:new Date(new Date().getFullYear(),new Date().getMonth(),1)}},_sum:{hours:!0}}),n=await g.task.count({where:{assignedToId:r,status:"DONE"}}),l=await g.task.count({where:{assignedToId:r,status:{in:["TODO","IN_PROGRESS"]},dueDate:{lt:new Date}}});return o.NextResponse.json({...s,statistics:{totalHours:a._sum.hours||0,thisMonthHours:i._sum.hours||0,completedTasks:n,overdueTasks:l,totalLeads:s._count.assignedLeads,totalClients:s._count.assignedClients,totalProjects:s._count.managedProjects,totalTasks:s._count.assignedTasks,totalTimeEntries:s._count.timeEntries}})}catch(e){return console.error("Error fetching team member:",e),o.NextResponse.json({error:"Internal server error"},{status:500})}}async function x(e,{params:t}){try{let r=await (0,u.getServerSession)(d.Nh);if(!r?.user?.id)return o.NextResponse.json({error:"Unauthorized"},{status:401});let{id:s}=await t;if(!s)return o.NextResponse.json({error:"Team member ID is required"},{status:400});let a=await g.user.findUnique({where:{id:r.user.id},select:{role:!0}});if(r.user.id!==s&&a?.role!=="ADMIN")return o.NextResponse.json({error:"Insufficient permissions"},{status:403});let i=await e.json(),n=h.parse(i),l=await g.user.findUnique({where:{id:s}});if(!l)return o.NextResponse.json({error:"Team member not found"},{status:404});if(n.email&&n.email!==l.email&&await g.user.findUnique({where:{email:n.email}}))return o.NextResponse.json({error:"Email already exists"},{status:409});if(n.role&&a?.role!=="ADMIN")return o.NextResponse.json({error:"Only administrators can change user roles"},{status:403});let c={...n,updatedAt:new Date};n.password&&(c.password=await w().hash(n.password,12));let m=await g.user.update({where:{id:s},data:c,select:{id:!0,name:!0,email:!0,role:!0,department:!0,position:!0,phone:!0,avatar:!0,isActive:!0,createdAt:!0,updatedAt:!0}});return o.NextResponse.json(m)}catch(e){if(e instanceof m.G)return o.NextResponse.json({error:"Validation error",details:e.errors},{status:400});return console.error("Error updating team member:",e),o.NextResponse.json({error:"Internal server error"},{status:500})}}async function N(e,{params:t}){try{let e=await (0,u.getServerSession)(d.Nh);if(!e?.user?.id)return o.NextResponse.json({error:"Unauthorized"},{status:401});let{id:r}=await t;if(!r)return o.NextResponse.json({error:"Team member ID is required"},{status:400});let s=await g.user.findUnique({where:{id:e.user.id},select:{role:!0}});if(s?.role!=="ADMIN")return o.NextResponse.json({error:"Only administrators can deactivate team members"},{status:403});if(e.user.id===r)return o.NextResponse.json({error:"Cannot deactivate your own account"},{status:400});let a=await g.user.findUnique({where:{id:r},include:{_count:{select:{assignedTasks:{where:{status:{in:["TODO","IN_PROGRESS"]}}},managedProjects:{where:{status:{in:["PLANNING","IN_PROGRESS"]}}},assignedLeads:{where:{status:{in:["NEW","CONTACTED","QUALIFIED"]}}}}}}});if(!a)return o.NextResponse.json({error:"Team member not found"},{status:404});if(a._count.assignedTasks>0||a._count.managedProjects>0||a._count.assignedLeads>0)return o.NextResponse.json({error:"Cannot deactivate user with active assignments",activeAssignments:{tasks:a._count.assignedTasks,projects:a._count.managedProjects,leads:a._count.assignedLeads}},{status:409});let i=await g.user.update({where:{id:r},data:{isActive:!1,updatedAt:new Date},select:{id:!0,name:!0,email:!0,isActive:!0,updatedAt:!0}});return o.NextResponse.json({message:"Team member deactivated successfully",user:i})}catch(e){return console.error("Error deactivating team member:",e),o.NextResponse.json({error:"Internal server error"},{status:500})}}let j=new a.AppRouteRouteModule({definition:{kind:i.RouteKind.APP_ROUTE,page:"/api/team/[id]/route",pathname:"/api/team/[id]",filename:"route",bundlePath:"app/api/team/[id]/route"},resolvedPagePath:"E:\\trae\\izoolyumCRM2.0\\zoolyumCRM2.0\\src\\app\\api\\team\\[id]\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:f,workUnitAsyncStorage:y,serverHooks:A}=j;function E(){return(0,n.patchFetch)({workAsyncStorage:f,workUnitAsyncStorage:y})}},27771:()=>{},87859:()=>{},26718:(e,t,r)=>{"use strict";r.d(t,{Nh:()=>l});var s=r(47033),a=r(58196),i=r(34875),n=r(65972),o=r(50826),u=r(96330);let d="true"===process.env.AUTH_BYPASS_ENABLED,l={adapter:(0,s.y)(n.z),session:{strategy:"jwt"},pages:{signIn:"/auth/signin",signUp:"/auth/signup"},providers:[(0,i.A)({clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET}),(0,a.A)({name:"credentials",credentials:{email:{label:"Email",type:"email",placeholder:"john@example.com"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)return null;if(d){console.warn("\uD83D\uDEA8 AUTH BYPASS MODE ENABLED - DEVELOPMENT ONLY!");let e=await n.z.user.findFirst({where:{role:u.UserRole.ADMIN,isActive:!0},select:{id:!0,email:!0,name:!0,role:!0,avatar:!0}});return e?{id:e.id,email:e.email,name:e.name,role:e.role,avatar:e.avatar}:{id:"bypass-user",email:"bypass@agency.com",name:"Bypass User (DEV)",role:u.UserRole.ADMIN,avatar:null}}let t=await n.z.user.findUnique({where:{email:e.email},select:{id:!0,email:!0,name:!0,password:!0,role:!0,avatar:!0,isActive:!0}});return t&&t.isActive&&t.password&&await (0,o.compare)(e.password,t.password)?{id:t.id,email:t.email,name:t.name,role:t.role,avatar:t.avatar}:null}})],callbacks:{jwt:async({token:e,user:t})=>(t&&(e.role=t.role,e.avatar=t.avatar),e),session:async({session:e,token:t})=>(t&&(e.user.id=t.sub,e.user.role=t.role,e.user.avatar=t.avatar),e),async signIn({user:e,account:t,profile:r}){if(t?.provider==="google")try{await n.z.user.findUnique({where:{email:e.email}})||await n.z.user.create({data:{email:e.email,name:e.name,avatar:e.image,role:u.UserRole.AGENT}})}catch(e){return console.error("Error creating user:",e),!1}return!0}}}},65972:(e,t,r)=>{"use strict";r.d(t,{z:()=>a});var s=r(96330);let a=globalThis.prisma??new s.PrismaClient({log:["query"]})}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[5363,3186,7304,4133],()=>r(55207));module.exports=s})();